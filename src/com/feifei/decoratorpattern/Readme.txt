装饰者模式
定义:动态的将责任附加到对象上，如要拓展功能，装饰者提供了比继承更富有弹性的替代方案
每个组件都可以单独使用，或者被装饰者包装起来使用
装饰者和被装饰者必须有共同的父类

                  抽象组（Beverage）
           --------------------------------
           |                              |
         具体组件（被装饰者）           抽象装饰者
         HouseBlend..           CondimentDecorator
                                          |
                                   装饰者Soy、Whip
         创建 一个具体组件，然后作为入参传入装饰者有参构造器里进行包装
###1.装饰者里声明一个全局变量beverage用来接收被包装对象，该变量通过超类Beverage来声明以保证可以用来接收任意一个子类饮料
###2.在抽象组BaseBeverage中设置description属性的getter方法，cost方法设置为abstract
###3.每个具体组件在构造器中重置从父类继承到的description属性，并且重写cost方法
###4.抽象装饰者继承抽象组，将getDescription方法设置为抽象方法，以保证所有装饰者子类都要重写getDescription方法
###5.每个具体装饰者都要继承自抽象装饰者，然后重写getDescription方法以及要包装的cost方法。具体做法是在cost方法里调用被包装
对象的cost方法，然后在加上自定义逻辑。